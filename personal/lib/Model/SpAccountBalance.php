<?php
/**
 * SpAccountBalance
 *
 * PHP version 5
 *
 * @category Class
 * @package  Ganb\Personal\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * GMO Aozora Net Bank Open API
 *
 * <p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p> <div>   <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/business/service/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div> </div> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4> <div style='width:100%; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>   <div style='display:table; margin-left:10px; background-color:#29659b;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       本番環境：api.gmo-aozora.com</br>       開発環境：stg-api.gmo-aozora.com     </div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       https://{domain_name}/ganb/api/personal/{version}</br>       <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>       　https://api.gmo-aozora.com/ganb/api/personal/<span style='border-bottom:solid 1px;'>v1</span>     </div>   </div> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <ul>     <li>レスポンスデータ</li>       <ul>         <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>     <li>配列</li>       <ul>         <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>         <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>   </ul> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>   <ul>     <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>     <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>   </ul> </div>
 *
 * OpenAPI spec version: 1.1.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Ganb\Personal\Client\Model;

use \ArrayAccess;
use \Ganb\Personal\Client\ObjectSerializer;
use ReturnTypeWillChange;

/**
 * SpAccountBalance Class Doc Comment
 *
 * @category Class
 * @package  Ganb\Personal\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SpAccountBalance implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SpAccountBalance';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_id' => 'string',
        'od_balance' => 'string',
        'td_total_balance' => 'string',
        'fod_total_balance_yen_equivalent' => 'string',
        'sp_account_fcy_balances' => '\Ganb\Personal\Client\Model\SpAccountFcyBalance[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_id' => null,
        'od_balance' => null,
        'td_total_balance' => null,
        'fod_total_balance_yen_equivalent' => null,
        'sp_account_fcy_balances' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'od_balance' => 'odBalance',
        'td_total_balance' => 'tdTotalBalance',
        'fod_total_balance_yen_equivalent' => 'fodTotalBalanceYenEquivalent',
        'sp_account_fcy_balances' => 'spAccountFcyBalances'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'od_balance' => 'setOdBalance',
        'td_total_balance' => 'setTdTotalBalance',
        'fod_total_balance_yen_equivalent' => 'setFodTotalBalanceYenEquivalent',
        'sp_account_fcy_balances' => 'setSpAccountFcyBalances'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'od_balance' => 'getOdBalance',
        'td_total_balance' => 'getTdTotalBalance',
        'fod_total_balance_yen_equivalent' => 'getFodTotalBalanceYenEquivalent',
        'sp_account_fcy_balances' => 'getSpAccountFcyBalances'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['od_balance'] = isset($data['od_balance']) ? $data['od_balance'] : null;
        $this->container['td_total_balance'] = isset($data['td_total_balance']) ? $data['td_total_balance'] : null;
        $this->container['fod_total_balance_yen_equivalent'] = isset($data['fod_total_balance_yen_equivalent']) ? $data['fod_total_balance_yen_equivalent'] : null;
        $this->container['sp_account_fcy_balances'] = isset($data['sp_account_fcy_balances']) ? $data['sp_account_fcy_balances'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['account_id'] === null) {
            $invalidProperties[] = "'account_id' can't be null";
        }
        if ((mb_strlen($this->container['account_id']) > 29)) {
            $invalidProperties[] = "invalid value for 'account_id', the character length must be smaller than or equal to 29.";
        }

        if ((mb_strlen($this->container['account_id']) < 12)) {
            $invalidProperties[] = "invalid value for 'account_id', the character length must be bigger than or equal to 12.";
        }

        if (!is_null($this->container['od_balance']) && (mb_strlen($this->container['od_balance']) > 20)) {
            $invalidProperties[] = "invalid value for 'od_balance', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['od_balance']) && (mb_strlen($this->container['od_balance']) < 1)) {
            $invalidProperties[] = "invalid value for 'od_balance', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['td_total_balance']) && (mb_strlen($this->container['td_total_balance']) > 20)) {
            $invalidProperties[] = "invalid value for 'td_total_balance', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['td_total_balance']) && (mb_strlen($this->container['td_total_balance']) < 1)) {
            $invalidProperties[] = "invalid value for 'td_total_balance', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['fod_total_balance_yen_equivalent']) && (mb_strlen($this->container['fod_total_balance_yen_equivalent']) > 20)) {
            $invalidProperties[] = "invalid value for 'fod_total_balance_yen_equivalent', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['fod_total_balance_yen_equivalent']) && (mb_strlen($this->container['fod_total_balance_yen_equivalent']) < 1)) {
            $invalidProperties[] = "invalid value for 'fod_total_balance_yen_equivalent', the character length must be bigger than or equal to 1.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id 口座ID 半角英数字 つかいわけ口座を識別するID
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        if ((mb_strlen($account_id) > 29)) {
            throw new \InvalidArgumentException('invalid length for $account_id when calling SpAccountBalance., must be smaller than or equal to 29.');
        }
        if ((mb_strlen($account_id) < 12)) {
            throw new \InvalidArgumentException('invalid length for $account_id when calling SpAccountBalance., must be bigger than or equal to 12.');
        }

        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets od_balance
     *
     * @return string
     */
    public function getOdBalance()
    {
        return $this->container['od_balance'];
    }

    /**
     * Sets od_balance
     *
     * @param string $od_balance 円普通預金残高 半角数字　マイナス含む 該当しない場合は項目自体を設定しません
     *
     * @return $this
     */
    public function setOdBalance($od_balance)
    {
        if (!is_null($od_balance) && (mb_strlen($od_balance) > 20)) {
            throw new \InvalidArgumentException('invalid length for $od_balance when calling SpAccountBalance., must be smaller than or equal to 20.');
        }
        if (!is_null($od_balance) && (mb_strlen($od_balance) < 1)) {
            throw new \InvalidArgumentException('invalid length for $od_balance when calling SpAccountBalance., must be bigger than or equal to 1.');
        }

        $this->container['od_balance'] = $od_balance;

        return $this;
    }

    /**
     * Gets td_total_balance
     *
     * @return string
     */
    public function getTdTotalBalance()
    {
        return $this->container['td_total_balance'];
    }

    /**
     * Sets td_total_balance
     *
     * @param string $td_total_balance 円定期預金（総額） 半角数字　マイナス含む つかいわけ口座に紐付いた、円定期預金の総残高 該当しない場合は項目自体を設定しません
     *
     * @return $this
     */
    public function setTdTotalBalance($td_total_balance)
    {
        if (!is_null($td_total_balance) && (mb_strlen($td_total_balance) > 20)) {
            throw new \InvalidArgumentException('invalid length for $td_total_balance when calling SpAccountBalance., must be smaller than or equal to 20.');
        }
        if (!is_null($td_total_balance) && (mb_strlen($td_total_balance) < 1)) {
            throw new \InvalidArgumentException('invalid length for $td_total_balance when calling SpAccountBalance., must be bigger than or equal to 1.');
        }

        $this->container['td_total_balance'] = $td_total_balance;

        return $this;
    }

    /**
     * Gets fod_total_balance_yen_equivalent
     *
     * @return string
     */
    public function getFodTotalBalanceYenEquivalent()
    {
        return $this->container['fod_total_balance_yen_equivalent'];
    }

    /**
     * Sets fod_total_balance_yen_equivalent
     *
     * @param string $fod_total_balance_yen_equivalent 外貨普通預金（総評価額） 半角数字　マイナス含む つかいわけ口座に紐付いた、外貨普通預金の総残高を円に換算した額 該当しない場合は項目自体を設定しません
     *
     * @return $this
     */
    public function setFodTotalBalanceYenEquivalent($fod_total_balance_yen_equivalent)
    {
        if (!is_null($fod_total_balance_yen_equivalent) && (mb_strlen($fod_total_balance_yen_equivalent) > 20)) {
            throw new \InvalidArgumentException('invalid length for $fod_total_balance_yen_equivalent when calling SpAccountBalance., must be smaller than or equal to 20.');
        }
        if (!is_null($fod_total_balance_yen_equivalent) && (mb_strlen($fod_total_balance_yen_equivalent) < 1)) {
            throw new \InvalidArgumentException('invalid length for $fod_total_balance_yen_equivalent when calling SpAccountBalance., must be bigger than or equal to 1.');
        }

        $this->container['fod_total_balance_yen_equivalent'] = $fod_total_balance_yen_equivalent;

        return $this;
    }

    /**
     * Gets sp_account_fcy_balances
     *
     * @return \Ganb\Personal\Client\Model\SpAccountFcyBalance[]
     */
    public function getSpAccountFcyBalances()
    {
        return $this->container['sp_account_fcy_balances'];
    }

    /**
     * Sets sp_account_fcy_balances
     *
     * @param \Ganb\Personal\Client\Model\SpAccountFcyBalance[] $sp_account_fcy_balances つかわけ口座外貨残高情報リスト 該当する情報が無い場合は、空のリストを返却します
     *
     * @return $this
     */
    public function setSpAccountFcyBalances($sp_account_fcy_balances)
    {
        $this->container['sp_account_fcy_balances'] = $sp_account_fcy_balances;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


